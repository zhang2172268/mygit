//堆排序
void HeapSort(int *array, int size)
{
	//1.建堆--升序--大堆
	int end = size - 1;
	int root = ((size - 2) >> 1);
	for (; root >= 0; --root)
		HeapAdjust(array, size, root);
	
	//2.排序---删除
	while (end > 0)
	{
		Swap(&array[0], &array[end]);
		HeapAdjust(array, end, 0);
		end--;
	}
}

//向下调整
void HeapAdjust(int *array, int size, int parent)
{
	//child默认情况下：标记左孩子
	int child = (parent << 1) + 1;

	while (child < size)
	{
		//找左右孩子中最小的孩子，child来标记
		if (child + 1 < size && array[child] < array[child + 1])
			child += 1;

		//检测最大的孩子是否比双亲大
		if (array[child] > array[parent])
		{
			Swap(&array[child], &array[parent]);
			parent = child;
			child = (parent << 1) + 1;
		}
		else
			return;
	}
}
//打印函数
void PrintArray(int *array, int size)
{
	int i = 0;
	for (; i < size; i++)
	{
		printf("%d ", array[i]);
	}
	printf("\n");
}

//交换函数
void Swap(int *pLeft, int *pRight)
{
	int tmp = *pLeft;
	*pLeft = *pRight;
	*pRight = tmp;
}


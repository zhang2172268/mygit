/* 题目：寻找两个有序数组的中位数
              给定两个大小为 m 和 n 的有序数组?nums1 和?nums2。请你找出这两个有序数组的中位数，并且要求算法的时间复杂度为?O(log(m + n))。
你可以假设?nums1?和?nums2?不会同时为空。

示例 1:
	nums1 = [1, 3]
	nums2 = [2]
	则中位数是 2.0
示例 2:
	nums1 = [1, 2]
	nums2 = [3, 4]
	则中位数是 (2 + 3)/2 = 2.5
*/


class Solution {
public:
    double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) {
        unsigned len1 = nums1.size();
        unsigned len2 = nums2.size();
        vector<int> nums;
        unsigned i1 = 0, i2 = 0;
        double ret = 0.0;
        while (i1<len1&&i2<len2)
        {
            if (nums1[i1] < nums2[i2])
            {
                nums.push_back(nums1[i1]);
                i1++;
            }
            else
            {
                nums.push_back(nums2[i2]);
                i2++;
            }
        }
        while (i1 < len1)
            nums.push_back(nums1[i1++]);
        while (i2 < len2)
            nums.push_back(nums2[i2++]);

        int len = len1 + len2;
        if (len%2==0)
        {
            ret = (nums[len / 2 - 1] + nums[len / 2]) / 2.0;
        }
        else
        {
            ret = nums[len / 2 ];
        }

        return ret;
    }
};

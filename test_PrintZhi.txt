/* 按之字形顺序打印二叉树

     题目描述
请实现一个函数按照之字形打印二叉树，即第一行按照从左到右的顺序打印，第二层按照从右至左的顺序打
印，第三行按照从左到右的顺序打印，其他行以此类推。
*/

/*
struct TreeNode {
    int val;
    struct TreeNode *left;
    struct TreeNode *right;
    TreeNode(int x) :
            val(x), left(NULL), right(NULL) {
    }
};
*/
class Solution {
public:
    vector<vector<int> > Print(TreeNode* pRoot) {

		vector<vector<int> >  result;
		if (pRoot == NULL)
			return result;
 
		queue<TreeNode*> q;	
 
		q.push(pRoot);
		int flag = -1;//  flag=1表示从左向右，flag=1表示从右向左
		while (!q.empty())
		{
			//把q中的元素都pop出来
			vector<int> res;
			vector<TreeNode*> cur;
			while (!q.empty())
			{
				res.push_back(q.front()->val);
				cur.push_back(q.front());
				q.pop();
			}
			result.push_back(res);
			for (int i = cur.size() - 1; i >= 0; i--)
			{
				TreeNode* curNode = cur[i];
				if (flag == 1)
				{
					if(curNode->left)
					   q.push(curNode->left);
					if(curNode->right)
					   q.push(curNode->right);
				}
				else  //flag==1
				{
					if (curNode->right)
						q.push(curNode->right);
					if (curNode->left)
						q.push(curNode->left);
				}
			}
			flag = -flag;
		}
		return result;
    }
};
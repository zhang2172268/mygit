//1.实现一个函数，可以左旋字符串中的k个字符。
//ABCD左旋一个字符得到BCDA
//ABCD左旋两个字符得到CDAB
#include <stdio.h>
#include <string.h>

char move_steps(char *buf, int steps)
{
	int i = 0;
	int len = strlen(buf);
	steps = steps % len;//保证移动的位数在字符串长度的范围内
	while (steps)
	{
		char tep = buf[0];
		for (i = 0; i < len - 1; i++)
		{
			buf[i] = buf[i + 1];
		}
		buf[i] = tep;
		steps--;
	}
	return buf;
}
int main()
{
	char buf[] = "abcdef";
	move_steps(buf, 2);
	printf("msg = %s\n", buf);
	system("pause");
	return 0;
}

//2.判断一个字符串是否为另外一个字符串旋转之后的字符串。
//例如：给定s1 ＝ AABCD和s2 = BCDAA，返回1，给定s1 = abcd和s2 = ACBD，返回0.
//AABCD左旋一个字符得到ABCDA
//AABCD左旋两个字符得到BCDAA
//AABCD右旋一个字符得到DAABC
#define _CRT_SECURE_NO_WARNINGS 1
#include<stdio.h>
#include<string.h>

int isturn(char *str, char *sub)
{
	char *p = malloc(strlen(str) + strlen(str) + 1);
	strcpy(p, str);
	strcat(p, str);
	if (strstr(p, sub) == NULL)
		return 0;
	return 1;
}
int main()
{
	char buf[] = "abcdef";
	char sub[] = "cdefab";
	if (isturn(buf, sub) == 0)
	{
		printf("不是\n");
	}
	else
	{
		printf("是\n");
	}
	system("pause");
	return 0;
}

//简易三子棋
//game.h
#ifndef _GAME_H_
#define _GAME_H_
#include<stdio.h>
#include<stdlib.h>
#include<time.h>
#define ROW 3
#define COL 3

void InitBoard(char board[ROW][COL], int row, int col);
void DisplayBoard(char board[ROW][COL], int row, int col);
void PlayerMove(char board[ROW][COL], int row, int col);
void ComputerMove(char board[ROW][COL], int row, int col);
char CheckWin(char board[ROW][COL], int row, int col);

#endif

//game.c
#define _CRT_SECURE_NO_WARNINGS 1
#include"game.h"

void InitBoard(char board[ROW][COL], int row, int col)
{
	int i = 0;
	int j = 0;
	for (i = 0; i < row; i++)
	{
		for (j = 0; j < col; j++)
		{
			board[i][j] = ' ';
		}
	}
}

void DisplayBoard(char board[ROW][COL], int row, int col)
{
	int i = 0;
	int j = 0;
	for (i = 0; i < row; i++)
	{
		printf("%c|%c|%c\n", board[i][0], board[i][1], board[i][2]);
		if (i < row - 1)
		{
			printf("------");
		}
		printf("\n");
	}
}

void PlayerMove(char board[ROW][COL], int row, int col)
{
	int x = 0;
	int y = 0;
	while (1)
	{
		printf("玩家请走(横纵坐标间用空格隔开）：");
		scanf("%d%d", &x, &y);
		if ((x > 0) && (x <= row) && (y > 0) && (y <= col))
		{
			if ((board[x - 1][y - 1] != 'x') && (board[x - 1][y - 1] != '0'))
			{
				board[x - 1][y - 1] = 'x';
				break;
			}
			else
			{
				printf("输入坐标已有棋子\n");
			}
		}
		else
		{
			printf("输入坐标不合法\n");
		}
	}
}

void ComputerMove(char board[ROW][COL], int row, int col)
{
	int x = 0;
	int y = 0;
	x = rand() % 3;
	y = rand() % 3;
	if (board[x][y] = ' ')
	{
		board[x][y] = '0';
	}
}

char CheckWin(char board[ROW][COL], int row, int col)
{
	int i = 0;
	for (i = 0; i < row; i++)
	{
		//判断横行
		if ((board[i][0] == board[i][1]) && (board[i][1] == board[i][2]))
		{
			if (board[i][2] == 'x')
				return 'a';
			if (board[i][2] == '0')
				return 'b';
		}
		//判断竖列
		if ((board[0][i] == board[1][i]) && (board[1][i] == board[2][i]))
		{
			if (board[2][i] == 'x')
				return 'a';
			if (board[2][i] == '0')
				return 'b';
		}
		//判断斜
		if ((board[0][0] == board[1][1]) && (board[1][1] == board[2][2]))
		{
			if (board[2][2] == 'x')
				return 'a';
			if (board[2][2] == '0')
				return 'b';
		}
		if ((board[0][2] == board[1][1]) && (board[1][1] == board[2][0]))
		{
			if (board[2][0] == 'x')
				return 'a';
			if (board[2][0] == '0')
				return 'b';
		}
	}
}

//test.c
#define _CRT_SECURE_NO_WARNINGS 1
#include "game.h"

void menu()
{
	printf("*******************************\n");
	printf("*********** 1.play ************\n");
	printf("*********** 0.exit ************\n");
	printf("*******************************\n");
}

void game()
{
	int ret = 0;
	int count = 0;
	char board[ROW][COL];
	InitBoard(board, ROW, COL);
	DisplayBoard(board, ROW, COL);
	while (1)
	{
		count++;
		PlayerMove(board, ROW, COL);
		ret = CheckWin(board, ROW, COL);
		if (ret == 'a')
		{
			DisplayBoard(board, ROW, COL);
			printf("玩家赢\n");
			break;
		}
		if (ret == 'b')
		{
			DisplayBoard(board, ROW, COL);
			printf("电脑赢\n");
			break;
		}
		if (count == 5)
		{
			DisplayBoard(board, ROW, COL);
			printf("平局\n");
			break;
		}
		ComputerMove(board, ROW, COL);
		if (ret == 'a')
		{
			DisplayBoard(board, ROW, COL);
			printf("玩家赢\n");
			break;
		}
		if (ret == 'b')
		{
			DisplayBoard(board, ROW, COL);
			printf("电脑赢\n");
			break;
		}
		DisplayBoard(board, ROW, COL);
	}
}

void test()
{
	int input = 0;
	do{
		menu();
		printf("请选择：");
		scanf("%d", &input);
		switch (input)
		{
		case 1:
			game();
			break;
		case 0:
			printf("退出游戏\n");
			break;
		defalt:
			printf("输入错误，请重新选择");
			break;
		}
	} while (input);
}


int main()

{
	srand((unsigned int)time(NULL));
	test();
	system("pause");
	return 0;
}
/* 顺时针打印矩阵
   
   题目描述：
		输入一个矩阵，按照从外向里以顺时针的顺序依次打印出每一个数字，
   例如，如果输入如下4 X 4矩阵： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 
   则依次打印出数字1,2,3,4,8,12,16,15,14,13,9,5,6,7,11,10.
 */


class Solution {
public:
    vector<int> printMatrix(vector<vector<int> > matrix) {
        vector<int>res;
        res.clear();
        int row = matrix.size();//行数
        int col = matrix[0].size();//列数

        int circle = ((row < col ? row : col) - 1) / 2 + 1;//圈数

        for (int i = 0; i < circle; i++)
        {
            //左->右
            for (int j = i; j < col - i; ++j)
                res.push_back(matrix[i][j]);
            //上->下
            for (int k = i + 1; k < row - i; ++k)
                res.push_back(matrix[k][col - i - 1]);
            //右->左
            for (int l = col - i - 2; (l >= i) && (row - i - 1 != i); --l)
                res.push_back(matrix[row - i - 1][l]);
            //下->上
            for (int m = row - i - 2; (m > i) && (col - i - 1 != i); --m)
                res.push_back(matrix[m][i]);
        }
        return res;
    }
};
